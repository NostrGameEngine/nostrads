name: Build and Publish

on:
  push: 
  pull_request:
  release:
      types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write 
      id-token: write
      pages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3      
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build
      if: github.event_name != 'pull_request'
      run: |
        export VERSION=""
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            export VERSION=${GITHUB_REF#refs/tags/}
            echo "Publishing release $VERSION"
        else
            echo "Publishing snapshot"
        fi
        export GITHUB_REGISTRY=${{ github.repository }}
        export GITHUB_USERNAME=${{ github.actor }}
        export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
        ./gradlew --no-daemon build javadoc


    - name: Publish Snapshot
      if: github.event_name != 'pull_request' && github.event_name != 'release'
      env:
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |       
        ./gradlew --no-daemon publishAllPublicationsToDistFolder publishToSonatype  --info

    - name: Publish Release
      if: github.event_name != 'pull_request' && github.event_name == 'release'
      env:
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        export VERSION=""
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            export VERSION=${GITHUB_REF#refs/tags/}
            echo "Publishing release $VERSION"
        fi
        ./gradlew --no-daemon publishAllPublicationsToDistFolder publishToSonatype closeAndReleaseSonatypeStagingRepository  --info


    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist

 

    # - name: Deploy to GitHub Pages
    #   if: github.event_name == 'release'  
    #   id: deployment
    #   uses: actions/deploy-pages@v4
      
 
    - name: Build JS Client
      run: |
        npm install webpack webpack-cli buffer  path-browserify buffer  crypto-browserify  babel-loader @babel/core @babel/preset-env  @noble/ciphers @noble/curves @noble/hashes @scure/base
        ./gradlew --no-daemon :nostrads-js:packJsClient


    - name: Prepare deploy folder
      run: |
        mkdir -p dist/deploy
        cp -r nostrads-js/src/* dist/deploy/
        # Replace "testmode":true, with "testmode":false, in config.json
        sed -i 's/"testmode":true,/"testmode":false,/g' dist/deploy/console/config.json

    - name: Upload pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'dist/deploy'
      
    - name: Deploy to GitHub Pages
      # if: github.event_name == 'release'
      uses: actions/deploy-pages@v4

    - name: Prepare deploy-demo folder
      run: |
        mkdir -p dist/deploy-demo
        cp -r nostrads-js/src/* dist/deploy-demo/
        rm -f dist/deploy-demo/index.html
        echo '<!DOCTYPE html><meta http-equiv="refresh" content="0; url=/console/debug.html">' > dist/deploy-demo/index.html

    - name: Deploy to demo branch
      # if: github.event_name == 'release'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: dist/deploy-demo
        publish_branch: demo
        force_orphan: true

  build_delegate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Build Delegate executable
      run: |
        java -version
        ./gradlew shadowJar --no-daemon

    - name: Build Docker image
      working-directory: nostrads-delegate
      run: |
        IMAGE_NAME=ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/nostrads-delegate
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="latest"
        fi
        docker build -t $IMAGE_NAME:$VERSION .

    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push Docker image
      working-directory: nostrads-delegate
      run: |
        IMAGE_NAME=ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/nostrads-delegate
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="latest"
        fi
        docker push $IMAGE_NAME:$VERSION