buildscript {
    repositories { mavenCentral() }
    dependencies {
        // Add ASM dependencies
        classpath 'org.ow2.asm:asm:9.5'
        classpath 'org.ow2.asm:asm-tree:9.5'
    }
}
 

plugins {
    id "io.github.gradle-nexus.publish-plugin" version "2.0.0" 
}

ext {
    repo="NostrGameEngine/nostrads"
    website="https://ngengine.org/nostrads"
    baseGroup="org.ngengine"
    description="A Nostr based Ads network"
    author="Riccardo Balbo"
    authorAlias="rblb"
    authorEmail="os@rblb.it"
    license="BSD 3-Clause License"
    licenseUrl="https://opensource.org/licenses/BSD-3-Clause"
    baseVersion="0.2.0-SNAPSHOT"
    baseGroup="org.ngengine"
    nostr4jVersionSnapshot="0.2.0-SNAPSHOT"
    nostr4jVersion="0.2.4"
    ngePlatformVersionSnapshot = "0.2.0-SNAPSHOT"
    ngePlatformVersion = "0.2.2"

}


allprojects {

    def projectVersion = System.getenv("VERSION")
    if (projectVersion == null || projectVersion.trim().isEmpty()) {
        projectVersion = rootProject.ext.baseVersion
    }
    def projectGroup = System.getenv("GROUP") ?: rootProject.ext.baseGroup 
    
    println "Using project version: ${projectVersion}"
    println "Using project group: ${projectGroup}"

    version = projectVersion
    group   = projectGroup


 
}

if(System.getenv("SONATYPE_USERNAME") || project.findProperty("sonatypeUsername")){
    nexusPublishing {
        repositories {
            sonatype {
                nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
                snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))

                username = System.getenv("SONATYPE_USERNAME") ?: project.findProperty("sonatypeUsername") ?: ""
                password = System.getenv("SONATYPE_PASSWORD") ?: project.findProperty("sonatypePassword") ?: ""
            }
        }
    }
}